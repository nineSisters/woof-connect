[versions]
kotlin = "2.1.0"
jvmToolchain = "21"
ktor-version = "3.0.3"
logback = "1.5.13"
coroutines = "1.10.1"
exposed = "0.59.0"
fluentdLogger = "0.3.4"

[libraries]
plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.6.1" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
serialization-jackson = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version = "2.18.2" }
#validation-konform = { module = "io.konform:konform-jvm", version = "0.10.0" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor-version" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets-jvm", version.ref = "ktor-version" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets-jvm", version.ref = "ktor-version" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktor-version" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation-jvm", version.ref = "ktor-version" }
ktor-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson-jvm", version.ref = "ktor-version" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktor-version" }
ktor-server-call-id = { module = "io.ktor:ktor-server-call-id-jvm", version.ref = "ktor-version" }
ktor-server-request-validation = { module = "io.ktor:ktor-server-request-validation", version.ref = "ktor-version" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth-jvm", version.ref = "ktor-version" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt-jvm", version.ref = "ktor-version" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio-jvm", version.ref = "ktor-version" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host-jvm", version.ref = "ktor-version" }

logging-logback-classic = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logback" }
logging-slf4j-api = { group = "org.slf4j", name = "slf4j-api", version = "2.0.16" }
logging-fluentd-appender = { module = "com.sndyuk:logback-more-appenders", version = "1.8.7" }
logging-fluentd-logger = { group = "org.fluentd", name = "fluent-logger", version.ref = "fluentdLogger" }

persistence-cache4k = { module = "io.github.reactivecircus.cache4k:cache4k", version = "0.14.0" }
#logback-core = { group = "ch.qos.logback", name = "logback-core", version.ref = "logback" }
# database
db-postgres = "org.postgresql:postgresql:42.7.5"

db-hikari = "com.zaxxer:HikariCP:5.1.0"
db-exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
db-exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
db-exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
fabrikt = { id = "ch.acanda.gradle.fabrikt", version = "1.8.0" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor-version" }
docker-remote = { id = "com.bmuschko.docker-remote-api", version = "9.4.0" }
docker-compose = { id = "com.avast.gradle.docker-compose", version = "0.17.12" }
[bundles]
exposed = ["db-exposed-core", "db-exposed-dao", "db-exposed-jdbc"]
